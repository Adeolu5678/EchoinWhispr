name: Lint and Code Quality

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: '.'
      node-version:
        required: false
        type: string
        default: '18'
      pnpm-version:
        required: false
        type: string
        default: '8'

jobs:
  lint-and-quality:
    name: Lint and Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ inputs.pnpm-version }}

      - name: Get PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript type checking
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          else
            echo "No tsconfig.json found, skipping TypeScript check"
          fi

      - name: Run ESLint
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
            pnpm lint
          else
            echo "No ESLint configuration found, skipping linting"
          fi

      - name: Run Prettier check
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f ".prettierrc" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check .
          else
            echo "No Prettier configuration found, skipping format check"
          fi

      - name: Check for security vulnerabilities
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f "package.json" ]; then
            npm audit --audit-level=moderate
          else
            echo "No package.json found, skipping security audit"
          fi