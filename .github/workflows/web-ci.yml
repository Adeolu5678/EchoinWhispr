name: Web Application CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Web/**'
      - '.github/workflows/web-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Web/**'
      - '.github/workflows/web-ci.yml'
  workflow_call:

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  lint-and-test:
    name: Lint and Test Web App
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-web-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-web-

      - name: Install dependencies
        working-directory: ./Web
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript type checking
        working-directory: ./Web
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          else
            echo "No tsconfig.json found, skipping TypeScript check"
          fi

      - name: Run ESLint
        working-directory: ./Web
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
            pnpm lint
          else
            echo "No ESLint configuration found, skipping linting"
          fi

      - name: Run Prettier check
        working-directory: ./Web
        run: |
          if [ -f ".prettierrc" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check .
          else
            echo "No Prettier configuration found, skipping format check"
          fi

      - name: Run tests
        working-directory: ./Web
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            pnpm test
          else
            echo "No test script found, skipping tests"
          fi

  build:
    name: Build Web Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-web-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-web-

      - name: Install dependencies
        working-directory: ./Web
        run: pnpm install --frozen-lockfile

      - name: Build application
        working-directory: ./Web
        run: pnpm build
        env:
          NEXT_PUBLIC_CONVEX_URL: ${{ secrets.NEXT_PUBLIC_CONVEX_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          CONVEX_DEPLOYMENT: ${{ secrets.CONVEX_DEPLOYMENT }}

      - name: Verify build output
        run: |
          if [ ! -d "./Web/.next" ]; then
            echo "❌ Error: Build output directory .next not found"
            exit 1
          else
            echo "✅ Build output directory exists"
            ls -la ./Web/.next/ | head -10
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: ./Web/.next/
          retention-days: 7

      - name: Confirm artifact upload
        run: echo "✅ web-build artifact uploaded successfully"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    if: (github.ref == 'refs/heads/develop' && github.event_name == 'push') || (github.ref == 'refs/heads/main' && github.event_name == 'pull_request')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./Web/.next/

      - name: Verify artifact download
        run: |
          if [ ! -d "./Web/.next" ]; then
            echo "❌ Error: web-build artifact not found or download failed"
            echo "This might be due to:"
            echo "  - Build job failed to upload artifact"
            echo "  - Artifact expired (retention: 7 days)"
            echo "  - Workflow timing issue"
            exit 1
          else
            echo "✅ web-build artifact downloaded successfully"
            ls -la ./Web/.next/
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      - name: Deploy to Vercel (Staging)
        working-directory: ./Web
        run: |
          vercel --prod=false --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./Web/.next/

      - name: Verify artifact download
        run: |
          if [ ! -d "./Web/.next" ]; then
            echo "❌ Error: web-build artifact not found or download failed"
            echo "This might be due to:"
            echo "  - Build job failed to upload artifact"
            echo "  - Artifact expired (retention: 7 days)"
            echo "  - Workflow timing issue"
            exit 1
          else
            echo "✅ web-build artifact downloaded successfully"
            ls -la ./Web/.next/
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      - name: Deploy to Vercel (Production)
        working-directory: ./Web
        run: |
          vercel --prod --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}